# -*- coding: utf-8 -*-
"""Deployment-1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1maXsGK41np704jJ4OK9LLOgDCYJvWL5E
"""

!pip install streamlit
import pickle
import pandas as pd
import streamlit as st

st.sidebar.title('Stroke Prediction')
st.sidebar.markdown('---')


gender=st.sidebar.selectbox("Select gender of the patient", ('Male','Female'))
hyper=st.sidebar.selectbox("Select if patient has Hypertension",('Yes','No'))
ever_married=st.sidebar.selectbox("Select if patient is married",('Yes','No'))
residence_type=st.sidebar.selectbox("Select if patient lives in Urban Area",
 ('Yes','No'))
heart_dis=st.sidebar.selectbox("Select if the patient has Heart Disease",
 ('Yes','No'))
work_type=st.sidebar.radio('Select work type',('Never worked','Private',
                                               'Self-employed','children'))
smoking_status=st.sidebar.radio('Select smoking status',('formerly smoked',
                                                         'never smoked','smokes'))
bmi=st.sidebar.slider("BMI of the patient:", 0, 100, step=2)
avg_glucose=st.sidebar.slider("Glucose Level of patient", 0,400, step=5)
age=st.sidebar.slider("Age of the patient", 0,100, step=1)


heart_disease = int(heart_dis == "Yes")
hypertension = int(hyper == "Yes")

conf_stroke = {"gender": gender,
           "hyper": hyper,
           "ever_married": ever_married,
           "residence_type": residence_type,
           "heart_dis": heart_dis,
           "work_type": work_type,
           "smoking_status": smoking_status,
           "bmi": bmi,
           "avg_glucose": avg_glucose,
           "age": age
            }

df = pd.DataFrame.from_dict([conf_stroke])

#with open ('final_model.pkl', 'rb') as file:
try:
    with open('final_model.pkl', 'rb') as file:
        model = pickle.load(file)
except EOFError:
    st.error("Error: The model file 'final_model.pkl' is corrupted or incomplete. Please check the file or retrain the model.")
    # You might want to exit the script or handle the error in a way that makes sense for your application.
except FileNotFoundError:
    st.error("Error: The model file 'final_model.pkl' was not found. Please make sure it is in the correct directory.")
#model = pickle.load(open('final_model.pkl','rb'))
#enc=pickle.load(open('final_model.pkl', 'rb'))

#df.loc[:,["final_model","xgb_model_last"]]

#df.loc[:,["final_model","xgb_model_last"]] = enc.fit_transform(df.loc[:,
 #["final_model","xgb_model_last"]])

st.header("The information of your patient:")
st.table(df)

st.subheader("Press predict if the patients' details are correct")

if st.button("Predict Risk of Stroke"):
  try:
    prediction = model.predict(df)
    if prediction[0] == 1:
      st.write("The model predicts a high risk of stroke.")
    else:
      st.write("The model predicts a low risk of stroke.")
  except Exception as e:
        st.write(f"Error in prediction: {e}")

#st.success("The patient is predicted to have a stroke is â‚¬{} \u00B1 {}. ".
               #format(int(prediction[0]), int(prediction[0])*0.0918))